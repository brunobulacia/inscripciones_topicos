// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrera {
  id            String          @id @default(uuid())
  codigo        Int
  nombre        String
  planDeEstudio PlanDeEstudio[]
  estaActivo    Boolean         @default(true)
  updatedAt     DateTime        @updatedAt
  createdAt     DateTime        @default(now())
}

model PlanDeEstudio {
  id         String    @id @default(uuid())
  version    Int
  materias   Materia[]
  carreraId  String
  carrera    Carrera   @relation(fields: [carreraId], references: [id])
  estaActivo Boolean   @default(true)
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model Nivel {
  id         String    @id @default(uuid())
  semestre   Int
  materias   Materia[]
  estaActivo Boolean   @default(true)
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model Prerequisito {
  id                String  @id @default(uuid())
  siglaMateria      String  @map("siglaMateria")
  siglaPrerequisito String  @map("siglaPrerequisito")
  materia           Materia @relation("MateriaRequiere", fields: [siglaMateria], references: [id])
  prerequisito      Materia @relation("EsRequisitoDe", fields: [siglaPrerequisito], references: [id])

  esActivo  Boolean  @default(true)
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  @@unique([siglaMateria, siglaPrerequisito])
}

model Gestion {
  id         String    @id @default(uuid())
  a√±o       String
  periodo    Periodo[]
  estaActivo Boolean   @default(true)
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
}

model Periodo {
  id           String         @id @default(uuid())
  numero       Int
  grupoMateria GrupoMateria[]
  gestionId    String
  gestion      Gestion        @relation(fields: [gestionId], references: [id])
  estaActivo   Boolean        @default(true)
  updatedAt    DateTime       @updatedAt
  createdAt    DateTime       @default(now())

  @@unique([numero, gestionId])
}

model Docente {
  id               String         @id @default(uuid())
  nombre           String
  apellido_paterno String
  apellido_materno String
  ci               String         @unique
  registro         String         @unique
  email            String         @unique
  telefono         String         @unique
  password         String
  grupoMateria     GrupoMateria[]
  estaActivo       Boolean        @default(true)
  updatedAt        DateTime       @updatedAt
  createdAt        DateTime       @default(now())
}

model Estudiante {
  id                String              @id @default(uuid())
  nombre            String
  apellido_paterno  String
  apellido_materno  String
  telefono          String              @unique
  ci                String              @unique
  email             String              @unique
  matricula         String              @unique
  password          String
  ppac              Int                 @default(0)
  estaActivo        Boolean             @default(true)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  FichaInscripcion  FichaInscripcion[]
  BoletaInscripcion BoletaInscripcion[]
  avanceAcademicoId String?             @unique
  avanceAcademico   AvanceAcademico?    @relation(fields: [avanceAcademicoId], references: [id])
}

model Materia {
  id                String         @id @default(uuid())
  sigla             String         @unique
  nombre            String
  creditos          Int
  esElectiva        Boolean        @default(false)
  estaActiva        Boolean        @default(true)
  nivelId           String
  nivel             Nivel          @relation(fields: [nivelId], references: [id])
  grupoMateria      GrupoMateria[]
  planDeEstudioId   String
  planDeEstudio     PlanDeEstudio  @relation(fields: [planDeEstudioId], references: [id])
  siglaMateria      Prerequisito[] @relation("MateriaRequiere")
  siglaPrerequisito Prerequisito[] @relation("EsRequisitoDe")
  updatedAt         DateTime       @updatedAt
  createdAt         DateTime       @default(now())
}

model GrupoMateria {
  id                 String               @id @default(uuid())
  grupo              String
  inscritos          Int                  @default(0)
  cupos              Int                  @default(20)
  materiaId          String
  materia            Materia              @relation(fields: [materiaId], references: [id])
  docenteId          String
  docente            Docente              @relation(fields: [docenteId], references: [id])
  periodoId          String
  periodo            Periodo              @relation(fields: [periodoId], references: [id])
  detalleInsGr       DetalleInsGrupoMat[]
  aulaGrupoMateria   AulaGrupoMateria[]
  estaActivo         Boolean              @default(true)
  updatedAt          DateTime             @updatedAt
  createdAt          DateTime             @default(now())
  BoletaGrupoMateria BoletaGrupoMateria[]

  @@unique([grupo, materiaId, periodoId])
}

model FichaInscripcion {
  id                 String               @id @default(uuid())
  estudianteId       String
  estudiante         Estudiante           @relation(fields: [estudianteId], references: [id])
  detalleInscripcion DetalleInscripcion[]
  estaActivo         Boolean              @default(true)
  updatedAt          DateTime             @updatedAt
  createdAt          DateTime             @default(now())
}

model DetalleInscripcion {
  id                 String               @id @default(uuid())
  fichaInscripcionId String
  fichaInscripcion   FichaInscripcion     @relation(fields: [fichaInscripcionId], references: [id])
  detalleInsGrupoMat DetalleInsGrupoMat[]
  tipo               String
  estaActivo         Boolean              @default(true)
  updatedAt          DateTime             @updatedAt
  createdAt          DateTime             @default(now())
}

model DetalleInsGrupoMat {
  id                   String             @id @default(uuid())
  detalleInscripcionId String
  detalleInscripcion   DetalleInscripcion @relation(fields: [detalleInscripcionId], references: [id])
  grupoMateriaId       String
  grupoMateria         GrupoMateria       @relation(fields: [grupoMateriaId], references: [id])
  estado               String
  estaActivo           Boolean            @default(true)
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt

  @@unique([grupoMateriaId, estado])
}

model BoletaInscripcion {
  id                 String               @id @default(uuid())
  estudianteId       String
  estudiante         Estudiante           @relation(fields: [estudianteId], references: [id])
  BoletaGrupoMateria BoletaGrupoMateria[]
  estaActivo         Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  AvanceAcademico    AvanceAcademico?     @relation(fields: [avanceAcademicoId], references: [id])
  avanceAcademicoId  String?
}

model BoletaGrupoMateria {
  id                  String            @id @default(uuid())
  boletaInscripcionId String
  boletaInscripcion   BoletaInscripcion @relation(fields: [boletaInscripcionId], references: [id])
  grupoMateriaId      String
  grupoMateria        GrupoMateria      @relation(fields: [grupoMateriaId], references: [id])
  nota                Float?
  estaActivo          Boolean           @default(true)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model AvanceAcademico {
  id                String              @id @default(uuid())
  boletaInscripcion BoletaInscripcion[]
  estado            String
  estaActivo        Boolean             @default(true)
  updatedAt         DateTime            @updatedAt
  createdAt         DateTime            @default(now())
  estudiante        Estudiante?
}

model Modulo {
  id         String   @id @default(uuid())
  numero     Int
  aula       Aula[]
  estaActivo Boolean  @default(true)
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
}

model Aula {
  id                 String           @id @default(uuid())
  numero             Int
  capacidad          Int
  aulaGrupoMateriaId String
  aulaGrupoMateria   AulaGrupoMateria @relation(fields: [aulaGrupoMateriaId], references: [id])
  moduloId           String
  Modulo             Modulo           @relation(fields: [moduloId], references: [id])
  estaActivo         Boolean          @default(true)
  updatedAt          DateTime         @updatedAt
  createdAt          DateTime         @default(now())

  @@unique([numero, moduloId])
}

model Horario {
  id                 String           @id @default(uuid())
  diaSemana          String
  horaInicio         String
  horaFin            String
  aulaGrupoMateriaId String
  aulaGrupoMateria   AulaGrupoMateria @relation(fields: [aulaGrupoMateriaId], references: [id])
  estaActivo         Boolean          @default(true)
  updatedAt          DateTime         @updatedAt
  createdAt          DateTime         @default(now())

  @@unique([aulaGrupoMateriaId, diaSemana, horaInicio])
}

model AulaGrupoMateria {
  id             String       @id @default(uuid())
  grupoMateriaId String
  grupoMateria   GrupoMateria @relation(fields: [grupoMateriaId], references: [id])
  aula           Aula[]
  horario        Horario[]
  estaActivo     Boolean      @default(true)
  updatedAt      DateTime     @updatedAt
  createdAt      DateTime     @default(now())
}
